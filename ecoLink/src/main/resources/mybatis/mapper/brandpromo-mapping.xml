<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.BrandPromoDAO">
	<select id="getBrandPromoDetail" parameterType="string"
		resultType="brandPromoDto">
		select m.memNick, m.memName, e.entCrn, e.entPhone, e.memId,
		e.entdMainPic, e.entdShort, e.entdURL, e.entdIntro, e.entdIntroPic,
		e.entdPic1, e.entdPic2, e.entdPic3, e.entdExplain1, e.entdExplain2,
		e.entdExplain3, e.entdConfirm
		from enterprise as e
		join member as m on
		m.memId = e.memId
		where e.entCrn = #{entCrn};
	</select>

	<select id="getBrandPromoBookmark" parameterType="string">
		select count(*)
		from enterprise_bookmark where memId = #{memId} and entCrn =
		#{entCrn};
	</select>

	<delete id="deleteBrandPromoBookmark" parameterType="string">
		delete from
		enterprise_bookmark where memId = #{memId} and entCrn= #{entCrn};
	</delete>

	<insert id="insertBrandPromoBookmark" parameterType="string">
		insert into
		enterprise_bookmark values (#{memId}, #{entCrn});
	</insert>

	<select id="getCommentAvgRate" parameterType="string"
		resultType="double">
		select ifnull(ROUND(AVG(brcRate),1), 0) from brand_comment
		where entCrn = #{entCrn};
	</select>

	<select id="getCommentCount" parameterType="string"
		resultType="int">
		select COUNT(*) from brand_comment where entCrn =
		#{entCrn};
	</select>

	<insert id="insertBrandComment" parameterType="brandCommentDto">
		insert into
		brand_comment values (default, #{brcRate}, #{brcContents}, default,
		default, #{entCrn}, #{memId});
	</insert>

	<select id="getAllBrandComment" parameterType="hashmap"
		resultType="brandCommentDto">
		select b.brcId, b.brcRate, b.brcContents, b.brcRegtime,
		b.brcUpdateTime, b.entCrn, b.memId, m.memNick
		from brand_comment as b
		join member as m on m.memId = b.memId
		where entCrn = #{entCrn}
		order by
		b.brcRegtime desc limit #{limitindex} , #{limitcount};
	</select>

	<delete id="deleteBrandComment" parameterType="string">
		delete from
		brand_comment where entCrn = #{entCrn} and memId = #{memId};
	</delete>

	<update id="updateBrandComment" parameterType="brandCommentDto">
		update
		brand_comment set brcRate = #{brcRate}, brcContents = #{brcContents},
		brcUpdateTime =
		default where memId = #{memId} and entCrn = #{entCrn};
	</update>

	<select id="getNormalBPList" parameterType="hashmap"
		resultType="brandPromoListDto">
		select e.entCrn, e.memId, e.entPhone, e.entdMainPic,
		e.entdShort, e.entdURL, e.entdConfirm,
		ifnull(ROUND(AVG(bc.brcRate),1), 0) avgRate, m.memRegtime, m.memNick
		from enterprise as e
		join member as m on e.memId = m.memId
		left join
		brand_comment as bc on e.entCrn = bc.entCrn
		where e.entdConfirm = true
		group by e.entCrn
		order by m.memRegtime desc limit #{limitindex} ,
		#{limitcount};
	</select>

	<select id="getrateBPList" parameterType="hashmap"
		resultType="brandPromoListDto">
		select e.entCrn, e.memId, e.entPhone, e.entdMainPic,
		e.entdShort, e.entdURL, e.entdConfirm,
		ifnull(ROUND(AVG(bc.brcRate),1), 0) avgRate, m.memRegtime, m.memNick
		from enterprise as e
		join member as m on e.memId = m.memId
		left join
		brand_comment as bc on e.entCrn = bc.entCrn
		where e.entdConfirm = true
		group by e.entCrn
		order by avgRate desc limit #{limitindex} ,
		#{limitcount};
	</select>

	<select id="getoptionBPList" parameterType="hashmap"
		resultType="brandPromoListDto">
		select e.entCrn, e.memId, e.entPhone, e.entdMainPic,
		e.entdShort, e.entdURL, e.entdConfirm,
		ifnull(ROUND(AVG(bc.brcRate),1), 0) avgRate, m.memRegtime, m.memNick
		from enterprise as e
		join member as m on e.memId = m.memId
		left join
		brand_comment as bc on e.entCrn = bc.entCrn
		where e.entdConfirm = true
		and m.memNick like CONCAT('%',#{memNick},'%')
		group by e.entCrn
		order by ${option} desc limit #{limitindex} , #{limitcount};
	</select>

	<select id="getBPListCount" parameterType="string"
		resultType="int">
		select COUNT(*) from enterprise where entdConfirm = true;
	</select>

	<select id="getoptionBPListCount" parameterType="string"
		resultType="int">
		select COUNT(*) from enterprise as e
		join member as m on e.memId = m.memId
		where e.entdConfirm = true and m.memNick like CONCAT('%',#{memNick},'%');
	</select>
	
	<select id="getAllBrandComments" parameterType="hashmap"
		resultType="brandCommentDto">
		select b.brcId, b.brcRate, b.brcContents, b.brcRegtime,
		b.brcUpdateTime, b.entCrn, b.memId, m.memNick
		from brand_comment as b
		join member as m on m.memId = b.memId
		where entCrn = #{entCrn}
		order by
		b.brcRegtime desc;
	</select>


</mapper>






