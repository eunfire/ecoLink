<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.MyInfoDAO">

	<select id="getEntUser" parameterType="String" resultType="enterpriseDto">
		SELECT * FROM enterprise WHERE memId=#{memId};
	</select>
	
	<select id="getUser" parameterType="String" resultType="memberDto">
		SELECT * FROM member WHERE memId=#{memId};
	</select>
	
	<update id="userUpdate" parameterType="memberDto">
		UPDATE member SET memPw=#{memPw}, memNick=#{memNick} WHERE memId=#{memId};
	</update>
	
	<update id="entUpdate" parameterType="enterpriseDto">
		UPDATE enterprise SET entPhone=#{entPhone}, entdMainPic=#{entdMainPic}, entdShort=#{entdShort}, entdURL=#{entdURL},
		entdIntro=#{entdIntro}, entdIntroPic=#{entdIntroPic}, entdPic1=#{entdPic1}, entdPic2=#{entdPic2}, entdPic3=#{entdPic3},
		entdExplain1=#{entdExplain1}, entdExplain2=#{entdExplain2}, entdExplain3=#{entdExplain3}, entdConfirm=#{entdConfirm} WHERE memId=#{memId};
	</update>

	<update id="deleteUser" parameterType="memberDto">
		UPDATE member SET memPw="deleting@acount", memNick=#{memNick}, memEmail=#{memEmail}, memType="withdrawal", memRegtime=#{memRegtime}, memName=#{memName} WHERE memId=#{memId};
	</update>
	
	<delete id="deleteLike" parameterType="String">
		DELETE FROM board_like WHERE memId = #{memId};
	</delete>
	
	<delete id="deleteEnt" parameterType="enterpriseDto">
		DELETE FROM enterprise WHERE memId = #{memId};
	</delete>
	
	<delete id="deleteBC" parameterType="String" >
		DELETE FROM brand_comment WHERE entCrn IN (SELECT entCrn FROM enterprise WHERE memId = #{memId});
	</delete>
	
	<delete id="deleteEBM" parameterType="String">
		DELETE FROM enterprise_bookmark WHERE entCrn IN (SELECT entCrn FROM enterprise WHERE memId = #{memId});
	</delete>

	<select id="getBrandBookmark" resultType="enterpriseDto" parameterType="hashmap">
		SELECT e.*, m.memRegtime, m.memNick,
		IFNULL(ROUND(AVG(bc.brcRate),1), 0) avgRate
		FROM enterprise_bookmark eb
		JOIN enterprise e ON eb.entCrn = e.entCrn
		JOIN member m ON e.memId = m.memId
		LEFT JOIN brand_comment bc ON e.entCrn = bc.entCrn
		WHERE e.entdConfirm = true AND eb.memId = #{memId}
		GROUP BY e.entCrn
		ORDER BY m.memRegtime DESC
		LIMIT #{limitindex} , #{limitcount};
	</select>

	<select id="getBookmarkCount" resultType="int" parameterType="string">
		SELECT COUNT(*) FROM enterprise_bookmark
		WHERE memId = #{memId};
	</select>

	<select id="getBoardLike" resultType="boardDto" parameterType="hashmap">
		SELECT b.*, m.memNick FROM board_like bl
		JOIN board b ON bl.boardId = b.boardId
		JOIN member m ON b.memId = m.memId
		WHERE bl.memId = #{memId}
		ORDER BY b.boardRegtime DESC
		LIMIT #{limitindex} , #{limitcount};
	</select>

	<select id="getBoardLikeCount" resultType="int" parameterType="string">
		SELECT COUNT(*) FROM board_like
		WHERE memId = #{memId};
	</select>

	<select id="getMyBoard" resultType="boardDto" parameterType="hashmap">
		SELECT * FROM board
		WHERE memId = #{memId}
		ORDER BY
		boardRegtime DESC
		LIMIT #{limitindex} , #{limitcount};
	</select>

	<select id="getMyBoardCount" resultType="int" parameterType="string">
		SELECT COUNT(*) FROM board
		WHERE memId = #{memId};
	</select>
</mapper>